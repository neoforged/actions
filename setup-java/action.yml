name: 'setup-java'
description: 'Setup Java'

inputs:
  java-version:
    description: The Java version to set up
    type: string
    required: true
  problem-matcher:
    description: Whether to enable the problem matcher
    required: false
    default: true
  warning-file-path:
    description: A regex pattern to be used to match Java file names (without the .java suffix) that should have warnings
    type: string
    required: false
    default: '[^:]+'

runs:
  using: 'composite'
  steps:
    # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md#java
    - if: inputs.java-version == 8 || inputs.java-version == 11 || inputs.java-version == 17 || inputs.java-version == 21
      name: Setup Java ${{ inputs.java-version }} using bash
      shell: bash
      # language=bash
      run: |
        echo "JAVA_HOME=$(echo $JAVA_HOME_${{ inputs.java-version }}_X64)" >> "$GITHUB_ENV"
    - if: inputs.java-version != 8 && inputs.java-version != 11 && inputs.java-version != 17 && inputs.java-version != 21
      name: Setup Java ${{ inputs.java-version }} using setup-java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
    - name: Setup problem matcher
      shell: bash
      if: inputs.problem-matcher == 'true'
      env:
        MATCHER: |
          {
            "problemMatcher": [
              {
                "owner": "javac-errors",
                "pattern": [
                  {
                    "regexp": "^([^:]+\\.java):(\\d+): (error): (\\[(.+?)\\] )?(.+?)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "code": 5,
                    "message": 6
                  }
                ]
              },
              {
                "owner": "javac-warnings",
                "pattern": [
                  {
                    "regexp": "^(${{ inputs.warning-file-path }}\\.java):(\\d+): (warning): (\\[(.+?)\\] )?(.+?)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "code": 5,
                    "message": 6
                  }
                ]
              },
              {
                "owner": "immaculate",
                "pattern": [
                  {
                    "regexp": "^Issue formatting file (.+)\\s(.+)$",
                    "file": 1,
                    "message": 2
                  }
                ]
              }
            ]
          }
      run: |
        mkdir /tmp/problem-matchers/
        echo "$MATCHER" > /tmp/problem-matchers/javac.json
        echo "::add-matcher::/tmp/problem-matchers/javac.json"